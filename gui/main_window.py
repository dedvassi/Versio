import os
from PyQt6 import QtWidgets, QtGui
from PyQt6.QtWidgets import (
    QApplication, QMainWindow, QWidget, QLabel, QPushButton, QListWidget, QVBoxLayout, QGridLayout, QFileDialog, QMessageBox
)
from gui.repository_window import RepositoryWindowUi
from PyQt6.QtCore import Qt
from core.git_manager import GitManager  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Git


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.git_manager = GitManager()  # –≠–∫–∑–µ–º–ø–ª—è—Ä GitManager
        self.setup_ui()

    def setup_ui(self):
        self.setWindowTitle("Versio üòÑ by dedvassi")
        self.resize(340, 450)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∏–ª–µ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
        current_dir = os.path.dirname(os.path.abspath(__file__))  # –ü–∞–ø–∫–∞ gui/
        style_path = os.path.join(current_dir, "styles.qss")
        img_path = os.path.join(current_dir, "img")

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
        with open(style_path, "r") as file:
            self.setStyleSheet(file.read())

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget(self)
        self.setCentralWidget(central_widget)

        # –ì–ª–∞–≤–Ω—ã–π –º–∞–∫–µ—Ç
        main_layout = QGridLayout(central_widget)

        # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å: –∑–∞–≥–æ–ª–æ–≤–∫–∏
        header_layout = QVBoxLayout()
        self.name_lbl = QLabel("Versio üòÑ", alignment=Qt.AlignmentFlag.AlignCenter)
        self.name_lbl.setObjectName("name_lbl")
        self.sl_lbl = QLabel("–£–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ—Ä—Å–∏—è–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ª–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ!", alignment=Qt.AlignmentFlag.AlignCenter)
        header_layout.addWidget(self.name_lbl)
        header_layout.addWidget(self.sl_lbl)

        # –°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å: –∫–Ω–æ–ø–∫–∏
        btn_layout = QVBoxLayout()
        self.btn_new = QPushButton("–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç")
        # self.btn_new.setIcon(QtGui.QIcon(f'{img_path}/folder.png'))
        self.btn_new.clicked.connect(self.connect_new_repository)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
        btn_layout.addWidget(self.btn_new)

        # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        project_layout = QVBoxLayout()
        self.projects_lbl = QLabel("–ù–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã")
        self.projects_list = QListWidget()
        project_layout.addWidget(self.projects_lbl)
        project_layout.addWidget(self.projects_list)
        self.projects_list.itemClicked.connect(self.open_recent_repository)

        # –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å: –∫–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings_btn = QPushButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        main_layout.addLayout(header_layout, 0, 0)
        main_layout.addLayout(btn_layout, 1, 0)
        main_layout.addLayout(project_layout, 2, 0)
        main_layout.addWidget(self.settings_btn, 3, 0)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–∞–≤–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.update_recent_projects()

    def open_recent_repository(self, item):

        # 1. –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞
        folder = item.text()
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.save_recent_repository(folder)
        # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        self.git_manager.load_repo(folder)
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ
        self.open_repository_window()

    def connect_new_repository(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π'"""
        # 1. –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏
        folder = QFileDialog.getExistingDirectory(self, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        if not folder:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü–∞–ø–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.")
            return

        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–∞–ø–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º
        if self.git_manager.is_git_repository(folder):
            QMessageBox.information(self, "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–¥–∫–ª—é—á—ë–Ω", f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –ø–∞–ø–∫–µ {folder} –ø–æ–¥–∫–ª—é—á—ë–Ω.")
        else:
            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            init_repo = QMessageBox.question(
                self,
                "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è",
                f"–ü–∞–ø–∫–∞ {folder} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π?",
                QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
            )
            if init_repo == QMessageBox.StandardButton.Yes:
                self.git_manager.init_repository(folder)
                QMessageBox.information(self, "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω", f"–ù–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –ø–∞–ø–∫–µ {folder} —Å–æ–∑–¥–∞–Ω.")

        # 3. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.save_recent_repository(folder)

        # 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        self.git_manager.load_repo(folder)
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ
        self.open_repository_window()

    def open_repository_window(self):
        """–ó–∞–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏ –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
        self.ui = RepositoryWindowUi(self.git_manager)  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤—Ç–æ—Ä–æ–≥–æ –æ–∫–Ω–∞

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.close()

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        self.repo_window = QtWidgets.QMainWindow()
        self.ui.setupUi(self.repo_window)
        self.repo_window.show()

    def save_recent_repository(self, path):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
        self.git_manager.save_recent_repository(path)
        self.update_recent_projects()

    def update_recent_projects(self):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ '–ù–µ–¥–∞–≤–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã'"""
        recent_repositories = self.git_manager.get_recent_repositories()
        self.projects_list.clear()
        for repo in recent_repositories:
            self.projects_list.addItem(repo)